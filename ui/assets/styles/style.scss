@use "./fonts.scss";

@each $theme-name, $theme in $themes {
  [data-theme="#{$theme-name}"] {
    @each $color-name, $color in $theme {
      // stylelint-disable-next-line custom-property-pattern -- It is in kebab-case
      --theme-#{$color-name}: #{color-to-rgb-string($color)};
    }
  }
}

html,
body {
  margin: 0;
  padding: 0;
  font: 12pt/2 $font-stack-text;
  color: theme-color(text-primary);
  background-color: theme-color(page-background);
  word-wrap: break-word;
  text-rendering: optimizeLegibility;
  transition: background-color 0.3s, color 0.3s;
}

html {
  overflow-y: scroll;
}

// IE9 / IE10 does not do this automatically
[hidden] {
  display: none;
}

h1 {
  font-weight: 300;
  font-size: 2rem;
  line-height: 2.5rem;
  margin: 1.5rem 0;
}

h2 {
  font-weight: 400;
  margin: 0;
  font-size: 1.5rem;
}

h3 {
  font-weight: 700;
  font-size: 1.2rem;
  margin: 1rem 0 0;
}

h4 {
  font-weight: 700;
  font-size: 1rem;
  margin: 0.8rem 0 0;
}

p {
  margin: 1rem 0;
}

section {
  padding-top: 1.2ex;
}

.centered {
  text-align: center;
}

.clearfix {
  clear: both;
}

label {
  max-width: 100%;
}

.hint {
  display: block;
  color: theme-color(text-secondary);
  font-size: 0.8rem;
  line-height: 1.5;
}

template {
  display: none !important;
}

#ofl-root.js .no-js {
  display: none;
}

#ofl-root.no-js .only-js {
  display: none;
}

code {
  font-family: $font-stack-code;
  color: theme-color(text-secondary);
  font-weight: 400;
}

h1 code,
h2 code,
h3 code,
code.channel-key {
  margin: 0 1ex;
}

a {
  text-decoration: none;
  color: theme-color(link);
  fill: theme-color(icon);
  transition: color 0.1s, fill 0.1s, background-color 0.1s;

  &:hover,
  &:focus {
    color: theme-color(link-hover);
    fill: theme-color(icon-hover);
  }
}

textarea {
  min-height: 4em;
  resize: vertical;
}

select {
  width: 30ex;
}

input[type="number"] {
  width: 10ex;
}

textarea,
input[type="text"],
input[type="email"],
input[type="search"],
input[type="url"] {
  width: 40ex;
}

select,
textarea,
input[type="text"],
input[type="email"],
input[type="search"],
input[type="url"],
input[type="number"] {
  box-sizing: border-box;
  max-width: 100%;
  padding: 0.4em;
  background: theme-color(form-field-background);
  border: 1px solid theme-color(form-field-border);
  color: theme-color(text-primary);
  border-radius: 3px;
  font-size: 0.95em;
  font-family: $font-stack-text;
  transition: background-color 0.2s, border-color 0.2s;

  &:focus {
    border-color: $blue-300;
  }

  &:disabled {
    background: $grey-100;
    opacity: 0.9;
  }

  &.vf-touched.vf-invalid,
  &.vf-submitted.vf-invalid,
  &.vf-touched[class^="vf-invalid-"],
  .vf-touched.vf-invalid &,
  .vf-submitted.vf-invalid &,
  .vf-touched[class^="vf-invalid-"] & {
    border-color: red;
    box-shadow: 0 0 4px rgba(255, 0, 0, 40%);
  }
}

textarea[readonly] {
  line-height: 1.3;
  font-size: 0.9em;
  font-family: $font-stack-code;
  font-weight: 400;
  white-space: pre-wrap;
  background: theme-color(header-background);
  color: theme-color(text-primary);
  padding: 1em;
  border: none;
  width: 100%;
  height: 15em;
  overflow: auto;
  resize: none;
}

.error-message {
  display: block;
  color: red;

  & div::before {
    content: "!";
    display: inline-block;
    height: 1em;
    line-height: 1em;
    width: 1em;
    margin: -2px 1ex 0 0;
    text-align: center;
    background: red;
    border-radius: 9999px;
    color: white;
    font-weight: 700;
    vertical-align: middle;
  }
}

input.addition {
  margin-left: 1ex;
}

select.empty {
  color: theme-color(text-secondary);
  font-style: italic;

  & > option {
    color: theme-color(text-primary);
    font-style: normal;
  }
}

input::placeholder {
  color: theme-color(text-secondary);
  font-style: italic;
  opacity: 1; // Firefox sets a default opacity
}

button,
a.button {
  &.primary,
  &.secondary {
    border-radius: 2px;
    border: 1px solid;
    display: inline-block;
    cursor: pointer;
    font-weight: 700;
    font-size: 0.9em;
    line-height: 1.4;
    padding: 0.5em 3ex;
    transition: 0.2s background-color;

    &.inline {
      font-size: 0.85em;
      padding: 4px 6px;
    }

    &:disabled {
      cursor: default;
      opacity: 0.5;
    }

    &:not(:disabled):active {
      position: relative;
      top: 1px;
    }
  }

  &.primary {
    background-color: theme-color(button-primary-background);
    border-color: theme-color(button-primary-border);
    color: theme-color(button-primary-text);

    &:not(:disabled):hover,
    &:not(:disabled):focus {
      background-color: theme-color(button-primary-background-hover);
      outline: 0;
    }
  }

  &.secondary {
    background-color: theme-color(button-secondary-background);
    border-color: theme-color(button-secondary-border);
    color: theme-color(button-secondary-text);

    &:not(:disabled):hover,
    &:not(:disabled):focus {
      background-color: theme-color(button-secondary-background-hover);
      outline: 0;
    }
  }
}

.button-bar {
  margin: 2ex 0 0;

  & button,
  & .button {
    margin-top: 1ex;
    margin-right: 1ex;
  }

  &.right {
    text-align: right;

    & button,
    & .button {
      margin-right: 0;
      margin-left: 1ex;
    }
  }
}

@media (max-width: $tablet) {
  html,
  body {
    font-size: 14px;
  }
}

.icon-button {
  $icon-size: 1.4em;
  $padding: 0.3em;

  display: inline-block;
  position: relative;
  padding: 0 0 0 #{$icon-size + 2 * $padding};
  width: 0;
  height: #{$icon-size + 2 * $padding};
  overflow: hidden;
  border: 1px solid;
  border-radius: 3px;
  cursor: pointer;
  vertical-align: middle;
  color: theme-color(icon);

  &::-moz-focus-inner {
    border: 0;
  }

  & > .icon {
    display: block;
    position: absolute;
    width: $icon-size;
    height: $icon-size;
    top: $padding;
    left: $padding;
    fill: currentColor;
  }

  &:not(.close) {
    background-color: theme-color(button-primary-background, 0);
    border-color: theme-color(button-primary-background, 0);

    @include mobile-hover-emulation((
      background-color: button-primary-background-hover,
      color: button-primary-text
    ));

    &:focus {
      border-color: $blue-300;
      outline: none;
    }

    &:active {
      background-color: theme-color(blue-background-active);
      border-color: rgba($blue-300, 0);
      color: $primary-text-light;
    }
  }

  &.close {
    background-color: rgba($red-700, 0);
    border-color: rgba($red-700, 0);

    &:focus {
      border-color: $red-700;
      color: theme-color(icon);
      outline: none;
    }

    &:hover {
      background-color: $red-700;
      color: $primary-text-light;
    }

    &:active {
      background-color: $red-300;
      border-color: rgba($red-700, 0);
      color: $primary-text-light;
    }
  }
}

.card {
  $card-spacing: 1rem;

  text-align: left;
  padding: 1rem;
  margin-bottom: $card-spacing;
  box-shadow: 0 2px 4px theme-color(divider);
  box-sizing: border-box;
  background-color: theme-color(card-background);
  border-radius: 3px;
  position: relative;
  fill: theme-color(icon);
  transition: background-color 0.3s;

  & .icon-button.close {
    float: right;
  }

  & a.big-button {
    margin: 1rem -1rem -1rem;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  &.dark {
    color: $primary-text-light;
    fill: $icon-light;
  }

  &.light-green {
    background: theme-color(light-green-background);
  }

  &.blue {
    background: theme-color(blue-background);
  }

  &.yellow {
    background-color: theme-color(yellow-background);
  }

  &.red {
    background-color: theme-color(red-background);
  }

  &.orange {
    background: theme-color(orange-background);
  }

  &:target {
    animation-delay: 0.5s;
    animation-duration: 1.2s;
    animation-fill-mode: backwards;
    animation-timing-function: ease;

    @include animation-keyframes {
      from {
        background-color: theme-color(blue-highlight);
      }
    }
  }

  .grid-3 > & {
    @media (min-width: $phone-landscape) {
      display: inline-block;
      width: calc((100% - #{$card-spacing}) / 2);
      vertical-align: top;

      & > h2,
      & > .name {
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
      }

      &:nth-child(2n) {
        margin-left: $card-spacing;
      }
    }

    @media (min-width: $tablet) {
      width: calc((100% - 2 * #{$card-spacing}) / 3);

      &:nth-child(3n+1) {
        margin-left: 0;
      }

      &:nth-child(3n+2),
      &:nth-child(3n) {
        margin-left: $card-spacing;
      }
    }
  }

  .grid-4 > & {
    @media (min-width: 440px) {
      display: inline-block;
      width: calc((100% - #{$card-spacing}) / 2);
      vertical-align: top;

      & > h2,
      & > .name {
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
      }

      &:nth-child(2n) {
        margin-left: $card-spacing;
      }
    }

    @media (min-width: 650px) {
      width: calc((100% - 2 * #{$card-spacing}) / 3);

      &:nth-child(3n+1) {
        margin-left: 0;
      }

      &:nth-child(3n+2),
      &:nth-child(3n) {
        margin-left: $card-spacing;
      }
    }

    @media (min-width: 920px) {
      width: calc((100% - 3 * #{$card-spacing}) / 4);

      &:nth-child(4n+1) {
        margin-left: 0;
      }

      &:nth-child(4n+2),
      &:nth-child(4n+3),
      &:nth-child(4n) {
        margin-left: $card-spacing;
      }
    }
  }
}

.manufacturer-color {
  border-left: 0.6rem solid transparent;
}

.list {
  padding: 0;
  margin: 0 -1rem;

  &:only-child {
    margin: -1rem;

    & li:first-child a {
      margin-top: 0;
      border-top-left-radius: 3px;
      border-top-right-radius: 3px;
    }

    & li:last-child a {
      border-bottom-left-radius: 3px;
      border-bottom-right-radius: 3px;
    }
  }

  & > li {
    list-style: none;
  }

  & > h2 {
    padding: 1rem 1rem 0;
  }

  .name {
    margin-right: auto;
  }
}

.list a,
a.card.slim {
  margin-top: 1px;
  padding: 0.5rem 1rem;
}

.list,
.card.slim {
  a,
  a .hint {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }

  .icon {
    width: 32px;
    height: 32px;

    &.left {
      margin-right: 1em;
    }

    &.right {
      margin-left: 1em;
    }
  }
}

a.card,
.link,
.list a {
  transition: background-color 0.2s, fill 0.2s;
  text-decoration: none;
  color: theme-color(text-primary);
  display: block;
  cursor: pointer;

  &:hover,
  &:focus {
    background-color: theme-color(hover-background);
    fill: theme-color(text-primary);
    outline: none;

    &.dark {
      fill: $primary-text-light;
    }

    &.light-green {
      background-color: theme-color(light-green-background-hover);
    }

    &.blue {
      background-color: theme-color(blue-background-hover);
    }
  }

  &:active {
    background-color: theme-color(active-background);

    &.light-green {
      background-color: theme-color(light-green-background-active);
    }

    &.blue {
      background-color: theme-color(blue-background-active);
    }
  }
}

.card-category,
.big-button {
  padding-left: 5rem;
  min-height: 5rem;

  & > .icon {
    position: absolute;
    top: 1rem;
    left: 1rem;
    width: 3rem;
    height: 3rem;
  }

  & > h2 {
    line-height: 3rem;
  }
}

.big-button > h2 {
  font-size: 1.2rem;
}

// display mode cards in a 2-col layout
@media (min-width: $tablet) {
  .fixture-mode {
    width: calc(50% - 0.5rem);

    &:nth-child(odd) {
      margin-right: 0.5rem;
      float: left;
      clear: left;
    }

    &:nth-child(even) {
      margin-left: 0.5rem;
      float: right;
      clear: right;
    }
  }
}

@media (max-width: $phone) {
  .list > li > a > .icon {
    width: 24px;
    height: 24px;

    &.left {
      margin-right: 0.6em;
    }

    &.right {
      margin-left: 0.6em;
    }
  }
}
