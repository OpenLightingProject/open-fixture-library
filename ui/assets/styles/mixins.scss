@use "sass:string";
@use "./theming.scss";

$animation-number: 0 !default;

@mixin animation-keyframes {
  $animation-number: $animation-number + 1 !global;
  $name: string.unquote("ofl-animation-#{$animation-number}");

  animation-name: $name;

  @at-root {
    // stylelint-disable-next-line keyframes-name-pattern -- It is in kebab-case
    @keyframes #{$name} {
      @content;
    }
  }
}

/// Usage:
///   @include mobile-hover-emulation((
///     background-color: <hover theme color name>,
///     // ...
///   ), 0.1s, 0.3s);
///
/// Result:
///   & {
///     transition-duration: 0.1s;
///   }
///
///   #ofl-root.no-touch &:hover {
///     background-color: <themed hover color>;
///   }
///   #ofl-root.touch &:hover {
///     animation-delay: 0.3s;
///     animation-duration: 0.1s;
///     animation-fill-mode: both;
///     animation-name: ofl-animation-1;
///   }
///
///   @keyframes ofl-animation-1 {
///     from {
///       background-color: <themed hover color>;
///     }
///     to {
///       background-color: unset;
///     }
///   }
@mixin mobile-hover-emulation($transition-map, $transition-duration: 0.2s, $mobile-hover-delay: 0.2s) {
  transition-duration: $transition-duration;

  #ofl-root.no-touch &:hover {
    @each $property, $color-name in $transition-map {
      #{$property}: theming.theme-color($color-name);
    }
  }

  #ofl-root.touch &:hover {
    animation-duration: $transition-duration;
    animation-delay: $mobile-hover-delay;
    animation-fill-mode: both;

    @include animation-keyframes {
      from {
        @each $property, $color-name in $transition-map {
          #{$property}: theming.theme-color($color-name);
        }
      }

      to {
        @each $property, $color-name in $transition-map {
          #{$property}: unset;
        }
      }
    }
  }
}
